Description: Create codebuild project to put our resources in S3 Bucket
Parameters:
  GitHubOwner:
    Type: String
  GitHubSecret:
    Type: String
    NoEcho: true
  GitHubOAuthToken:
    Type: String
    NoEcho: true
  Environment:
    Type: String
    Description: Select the appropriate environment
    AllowedValues:
      - dev
      - test
      - uat
      - prod
  SourceGitUrl:
    Type: String
    Description: Provide Source GitHub Repo Url  
Resources:
  IAMCodeBuildRole:
    Type: AWS::IAM::Role
    Properties: 
      RoleName: IAMCodeBuildRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "s3.amazonaws.com" 
                - "codebuild.amazonaws.com" 
                - "cloudformation.amazonaws.com"
                - "ecs.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
  CodeBuildPolicy:
     Type: AWS::IAM::Policy
     Properties: 
      PolicyName: "CodeBuildPolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
              - "iam:AddRoleToInstanceProfile"
              - "iam:AttachRolePolicy"
              - "iam:CreateInstanceProfile"
              - "iam:CreatePolicy"
              - "iam:CreateRole"
              - "iam:DeleteInstanceProfile"
              - "iam:DeletePolicy"
              - "iam:DeleteRole"
              - "iam:DeleteRolePolicy"
              - "iam:DetachRolePolicy"
              - "iam:GetInstanceProfile"
              - "iam:GetPolicy"
              - "iam:GetRole"
              - "iam:GetRolePolicy"
              - "iam:ListAttachedRolePolicies"
              - "iam:ListInstanceProfiles"
              - "iam:ListInstanceProfilesForRole"
              - "iam:ListRolePolicies"
              - "iam:ListRoles"
              - "iam:PassRole"
              - "iam:PutRolePolicy"
              - "iam:RemoveRoleFromInstanceProfile"
            Resource: 
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/WordPressECSTaskExecutionRole*'
          -
            Effect: "Allow"
            Action:
              - "s3:PutObject"
              - "s3:GetObject"
              - "s3:GetObjectVersion"
              - "s3:DeleteObject"
              - "s3:ListBucket"
            Resource: 
              - !GetAtt S3Bucket.Arn 
              - !Join ['', [ !GetAtt S3Bucket.Arn, '/*'] ] 
          -
            Effect: "Allow"
            Action:
              - "codebuild:CreateWebhook"
              - "codebuild:DeleteWebhook"
              - "codebuild:CreateProject"
              - "codebuild:UpdateProject"
              - "codebuild:DeleteProject"
              - "codebuild:ListProjects"
              - "codebuild:ListConnectedOAuthAccounts"
              - "codebuild:ListRepositories"
              - "codebuild:PersistOAuthToken"
              - "codebuild:ImportSourceCredentials"
            Resource: "*" 
          -
            Effect: "Allow"
            Action:
              - "cloudformation:ValidateTemplate"
              - "cloudformation:Get*"
              - "cloudformation:Describe*"
              - "cloudformation:List*"
            Resource: "*" 
          -
            Effect: "Allow"
            Action:
              - "cloudformation:CreateStack"
              - "cloudformation:DeleteStack"
              - "cloudformation:GetTemplate"
              - "cloudformation:DescribeStackResources"
              - "cloudformation:DescribeStackEvents"
              - "cloudformation:DescribeStacks"
              - "cloudformation:UpdateStack"
              - "cloudformation:CreateChangeSet"
              - "cloudformation:DeleteChangeSet"
            Resource:
              - !Sub 'arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/WPECSStack-dev*'
              - !Sub 'arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/WPECSStack-test*'
              - !Sub 'arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/WPECSStack-prod*'
              - !Sub 'arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stackset/WPECSStack-dev/*'
              - !Sub 'arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stackset/WPECSStack-test/*'
              - !Sub 'arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stackset/WPECSStack-prod/*'
          - 
            Effect: "Allow"
            Action:
              - "logs:CreateLogGroup"
              - "logs:DeleteLogGroup"
              - "logs:CreateLogStream"
              - "logs:DeleteLogStream"
              - "logs:PutLogEvents"
              - "logs:DescribeLogGroups"
              - "logs:DescribeLogStreams"
              - "logs:PutRetentionPolicy"
              - "logs:DeleteRetentionPolicy"
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group*" 
          - 
            Effect: "Allow"
            Action:
              - "servicediscovery:CreateService"
              - "servicediscovery:DeleteService"
              - "servicediscovery:UpdateService"
              - "servicediscovery:CreatePublicDnsNamespace"
              - "servicediscovery:CreateHttpNamespace"
              - "servicediscovery:CreatePrivateDnsNamespace"
              - "servicediscovery:DeleteNamespace"
              - "servicediscovery:DeregisterInstance"
              - "servicediscovery:RegisterInstance"
              - "servicediscovery:UpdateInstanceCustomHealthStatus"
            Resource: '*'
          - 
            Effect: "Allow"
            Action:
              - "elasticloadbalancing:ModifyListener"
              - "elasticloadbalancing:CreateLoadBalancer"
              - "elasticloadbalancing:RegisterTargets"
              - "elasticloadbalancing:CreateTargetGroup"
              - "elasticloadbalancing:DeregisterTargets"
              - "elasticloadbalancing:SetIpAddressType"
              - "elasticloadbalancing:SetSubnets"
              - "elasticloadbalancing:RemoveListenerCertificates"
              - "elasticloadbalancing:DeleteTargetGroup"
              - "elasticloadbalancing:DeleteLoadBalancer"
              - "elasticloadbalancing:RemoveTags"
              - "elasticloadbalancing:CreateListener"
              - "elasticloadbalancing:AddTags"
              - "elasticloadbalancing:CreateRule"
              - "elasticloadbalancing:SetSecurityGroups"
              - "elasticloadbalancing:AddListenerCertificates"
              - "elasticloadbalancing:ModifyLoadBalancerAttributes"
              - "elasticloadbalancing:ModifyTargetGroupAttributes"
              - "elasticloadbalancing:ModifyTargetGroup"
              - "elasticloadbalancing:DeleteListener"             
            Resource: 
              - !Sub "arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:targetgroup/*/*"
              - !Sub "arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:loadbalancer/app/*/*"
              - !Sub "arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:listener/net/*/*/*"
              - !Sub "arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:listener/app/*/*/*"
              - !Sub "arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:loadbalancer/net/*/*"
          - 
            Effect: "Allow"
            Action:
              - "elasticloadbalancing:DescribeLoadBalancerAttributes"
              - "elasticloadbalancing:SetWebAcl"
              - "elasticloadbalancing:DescribeLoadBalancers"
              - "elasticloadbalancing:DescribeListeners"
              - "elasticloadbalancing:DescribeTargetGroupAttributes"
              - "elasticloadbalancing:DescribeTargetHealth"
              - "elasticloadbalancing:DescribeTargetGroups"
              - "elasticloadbalancing:DescribeRules"            
            Resource: '*'
          -
            Effect: "Allow"
            Action:
              - "ecs:CreateCluster"
              - "ecs:DescribeClusters"
              - "ecs:DeleteCluster"
              - "ecs:CreateService"
              - "ecs:DescribeServices"
              - "ecs:DeleteService"
              - "ecs:CreateTaskSet"
              - "ecs:DeleteTaskSet"
              - "ecs:DiscoverPollEndpoint"
              - "ecs:RegisterContainerInstance"
              - "ecs:DeregisterContainerInstance"
              - "ecs:RegisterTaskDefinition"
              - "ecs:DescribeTaskDefinition"
              - "ecs:DeregisterTaskDefinition"
              - "ecs:RunTask"
              - "ecs:DescribeTasks"
              - "ecs:StopTask"
              - "ecs:StartTask"
              - "ecs:StopTask"
              - "ecs:SubmitContainerStateChange"
              - "ecs:SubmitTaskStateChange"
              - "ecs:UpdateContainerAgent"
              - "ecs:UpdateContainerInstancesState"
              - "ecs:UpdateService"
              - "ecs:UpdateServicePrimaryTaskSet"
              - "ecs:UpdateTaskSet"
              - "ecs:PutAttributes"
            Resource: '*'
          -
            Effect: "Allow"
            Action:
              - "ecr:BatchGetImage"
            Resource: 
              - !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/apache"
              - !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/php"
          -
            Effect: "Allow"
            Action:
              - "ec2:Describe*"
              - "ec2:CreateVpc"
              - "ec2:DeleteVpc"
              - "ec2:ModifyVpcAttribute"
              - "ec2:ModifySubnetAttribute"
              - "ec2:AssociateVpcCidrBlock"
              - "ec2:DisassociateVpcCidrBlock"
              - "ec2:AssociateSubnetCidrBlock"
              - "ec2:DisassociateSubnetCidrBlock"
              - "ec2:CreateInternetGateway"
              - "ec2:DeleteInternetGateway"
              - "ec2:AttachInternetGateway"
              - "ec2:DetachInternetGateway"
              - "ec2:CreateRoute"
              - "ec2:DeleteRoute"
              - "ec2:CreateRouteTable"
              - "ec2:DeleteRouteTable"
              - "ec2:AssociateRouteTable"
              - "ec2:DisassociateRouteTable"
              - "ec2:CreateSecurityGroup"
              - "ec2:DeleteSecurityGroup"
              - "ec2:CreateSecurityGroup"
              - "ec2:DeleteSecurityGroup"
              - "ec2:CreateDefaultSubnet"
              - "ec2:CreateSubnet"
              - "ec2:DeleteSubnet"
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
              - "ec2:AttachNetworkInterface"
              - "ec2:DetachNetworkInterface"
              - "ec2:CreateVolume"
              - "ec2:AttachVolume"
              - "ec2:DeleteVolume"
              - "ec2:DetachVolume"
              - "ec2:MonitorInstances"
              - "ec2:RebootInstances"
              - "ec2:ReleaseAddress"
              - "ec2:RunInstances"
              - "ec2:StartInstances"
              - "ec2:StopInstances"
              - "ec2:TerminateInstances"
              - "ec2:UnmonitorInstances"
              - "ec2:AuthorizeSecurityGroupIngress"
            Resource: '*'
          -
            Effect: "Allow"
            Action:
              - "rds:CreateDBCluster"
              - "rds:DeleteDBCluster"
              - "rds:CreateDBClusterParameterGroup"
              - "rds:DeleteDBClusterParameterGroup"
              - "rds:CreateDBInstance"
              - "rds:DeleteDBInstance"
              - "rds:CreateDBInstanceReadReplica"
              - "rds:DeleteDBInstanceReadReplica"
              - "rds:CreateDBSnapshot"
              - "rds:DeleteDBSnapshot"
              - "rds:CreateDBSubnetGroup"
              - "rds:DeleteDBSubnetGroup"
              - "rds:DescribeDBSubnetGroups"
              - "rds:CreateDBClusterSnapshot"
              - "rds:DeleteDBClusterSnapshot"
              - "rds:DescribeDBClusterSnapshots"
              - "rds:CreateOptionGroup"
              - "rds:DeleteOptionGroup"
              - "rds:CreateDBSecurityGroup"
              - "rds:DeleteDBSecurityGroup"
              - "rds:DescribeDBClusters"
              - "rds:DescribeDBEngineVersions"
              - "rds:DescribeDBInstances"
              - "rds:DescribeDBParameterGroups"
              - "rds:DescribeOptionGroups"
              - "rds:ModifyDBCluster"
              - "rds:ModifyDBClusterParameterGroup"
              - "rds:ModifyDBClusterSnapshotAttribute"
              - "rds:ModifyDBInstance"
              - "rds:ModifyDBParameterGroup"
              - "rds:ModifyDBSnapshotAttribute"
              - "rds:ModifyDBSubnetGroup"
              - "rds:ModifyOptionGroup"
            Resource: 
              - !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:*"
      Roles:
        - !Ref IAMCodeBuildRole
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      Tags:
      - Key: Name
        Value: WPStackBucket
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: CodeBuild Project for WPECSStack CloudFormation Templates Deployment
      Artifacts:
        Type: NO_ARTIFACTS
      BadgeEnabled: true
      ServiceRole: !GetAtt IAMCodeBuildRole.Arn
      Environment: 
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/standard:2.0'
        ImagePullCredentialsType: CODEBUILD
        Type: LINUX_CONTAINER
        EnvironmentVariables: 
          - Name: TEMPLATE_BUCKET
            Type: PLAINTEXT
            Value: !Ref S3Bucket
          - Name: TEMPLATE_PREFIX
            Type: PLAINTEXT
            Value: !Ref Environment
      Source:
        Auth: 
          Type: OAUTH
        Location: !Ref SourceGitUrl
        Type: GITHUB
        ReportBuildStatus: true
      Triggers:
        Webhook: true
        FilterGroups:
          - - Type: EVENT
              Pattern: PULL_REQUEST_CREATED,PULL_REQUEST_UPDATED
            - Type: BASE_REF
              Pattern: ^refs/heads/master$
              ExcludeMatchedPattern: false
          - - Type: EVENT
              Pattern: PUSH
            - Type: HEAD_REF
              Pattern: ^refs/heads/.*
            - Type: FILE_PATH
              Pattern: READ_ME
              ExcludeMatchedPattern: true
Outputs:
  S3BucketName:
    Description: S3 Bucket Name where template will be stored
    Value: !Ref S3Bucket
  CodeBuildProject:
    Description: Codebuild project name
    Value: !Ref CodeBuildProject