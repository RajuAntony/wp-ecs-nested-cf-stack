Description: 'ECS stack for WordPress'
Parameters:
  VPCID:
    Type: AWS::EC2::VPC::Id
    Description: Enter a valid VPC Id
  ClusterName:
    Type: String
    Description: Name of cluster
  TagPrefix:
    Type: String
    Description: Enter Prefix that should be used for Tags.
  SecurityGroups:
    Type: CommaDelimitedList
    Description: List of securitygroups ids
  PublicSubnets:
    Type: CommaDelimitedList
    Description: List of public subnet ids
Resources:
  WordPressECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: WordPressECSTaskExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
  ECSTaskExecutionPolicy:
    Type: AWS::IAM::Policy
    DependsOn: WordPressECSTaskExecutionRole
    Properties:
      PolicyName: ECSTaskExecutionPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - 
            Effect: Allow
            Action:
              - "ecr:GetAuthorizationToken"
              - "ecr:BatchCheckLayerAvailability"
              - "ecr:GetDownloadUrlForLayer"
              - "ecr:BatchGetImage"
            Resource: '*'
          - 
            Effect: Allow
            Action:
              - "logs:CreateLogGroup"
              - "logs:DeleteLogGroup"
              - "logs:CreateLogStream"
              - "logs:DeleteLogStream"
              - "logs:PutLogEvents"
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/*"
      Roles:
        - !Ref WordPressECSTaskExecutionRole
  WpCluster:
    Type: AWS::ECS::Cluster
    Properties: 
      ClusterName: !Ref ClusterName
      Tags: 
        - Key: Name
          Value: !Sub ${TagPrefix}-Cluster
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
      LogGroupName: '/ecs/WordPressService'
      RetentionInDays: 7
  WordPressTask:
    Type: AWS::ECS::TaskDefinition
    DependsOn: 
      - ECSTaskExecutionPolicy
      - WordPressECSTaskExecutionRole
      - LogGroup
    Properties: 
      ContainerDefinitions: 
        - 
          Name: 'ApacheContainer'
          Image: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/apache:latest'
          Cpu: 512
          Memory: 1024
          Essential: True
          PortMappings: 
            - ContainerPort: 80
              HostPort: 80
            - ContainerPort: 443
              HostPort: 443
          MountPoints:
            - ContainerPath: '/usr/local/apache2/htdocs'
              SourceVolume: WordPressTaskVolume
          Ulimits:
            - HardLimit: 0
              Name: 'rtprio'
              SoftLimit: 0
          LogConfiguration:
            LogDriver: awslogs
            Options: 
              awslogs-group : !Ref LogGroup
              awslogs-region: 'ap-southeast-2'
              awslogs-stream-prefix: 'ecs'
          HealthCheck:
            Command: 
              - 'CMD-SHELL, curl -f http://localhost/hello.html || exit 1'
            Interval: 300
            Retries: 3
            StartPeriod: 300
            Timeout: 30
        - 
          Name: 'PhpContainer' 
          Image: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/php:latest'
          Cpu: 512
          Memory: 1024
          Essential: True
          PortMappings: 
            - ContainerPort: 9000
          MountPoints:
            - ContainerPath: '/usr/local/apache2/htdocs'
              SourceVolume: WordPressTaskVolume
          Ulimits:
            - HardLimit: 0
              Name: 'rtprio'
              SoftLimit: 0
          LogConfiguration:
            LogDriver: awslogs
            Options: 
              awslogs-group : !Ref LogGroup
              awslogs-region: 'ap-southeast-2'
              awslogs-stream-prefix: 'ecs'
      Cpu: 1024
      TaskRoleArn: !GetAtt WordPressECSTaskExecutionRole.Arn
      ExecutionRoleArn: !GetAtt WordPressECSTaskExecutionRole.Arn
      Family: 'WordPressTasks'
      Memory: 2048
      NetworkMode: 'awsvpc'
      RequiresCompatibilities: 
        - FARGATE
      Tags: 
        - Key: Name
          Value: WordPressTask
      Volumes: 
        - Name: WordPressTaskVolume
          DockerVolumeConfiguration:
            Scope: shared
            Autoprovision: true
  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      IpAddressType: dualstack
      Name: 'alb-ecs-wordpress'
      Scheme: 'internet-facing'
      SecurityGroups: 
        - !Select [0, !Ref SecurityGroups ]
      Subnets: 
        - !Select [0, !Ref PublicSubnets ]
        - !Select [1, !Ref PublicSubnets ]
        - !Select [2, !Ref PublicSubnets ]
      Tags: 
        - Key: Name
          Value: ECSStackALB
      Type: application
  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      HealthCheckIntervalSeconds: 60
      HealthCheckPath: '/hello.html'
      HealthCheckPort: 80
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 30
      HealthyThresholdCount: 5
      Name: ECSALB
      Matcher:
        HttpCode: 200
      Port: 80
      Protocol: HTTP
      Tags: 
        - Key: Name
          Value: ECSStackALBTargetGroup
      UnhealthyThresholdCount: 2
      VpcId: !Ref VPCID
  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties: 
      LoadBalancerArn: !Ref ALB
      Port: 80
      Protocol: HTTP
  WpService:
    Type: AWS::ECS::Service
    DependsOn: WordPressTask
    Properties: 
      ServiceName: WordPressService
      Cluster: !Ref WpCluster
      DeploymentConfiguration: 
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration: 
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Select [0, !Ref SecurityGroups ]
          Subnets:
            - !Select [0, !Ref PublicSubnets ]
            - !Select [1, !Ref PublicSubnets ]
            - !Select [2, !Ref PublicSubnets ]
      PlatformVersion: LATEST
      PropagateTags: SERVICE 
      LoadBalancers:  
        - ContainerName: ApacheContainer
          ContainerPort: 80
          TargetGroupArn: !Ref ALBTargetGroup    
      SchedulingStrategy: REPLICA
      Tags: 
        - Key: Name
          Value: ECS-Service
      TaskDefinition: !Ref WordPressTask
        
Outputs:
  WpCluster:
    Value: !Ref WpCluster
  WPServiceARN:
    Value: !Ref WpService
  WordPressTaskARN:
    Value: !Ref WordPressTask
  ALBDNS: 
    Value: !GetAtt ALB.DNSName  