version: 0.2

environment_variables:
  plaintext:
    CHILD_TEMPLATES: |
      vpc-stack.yml
      security-stack.yml
    TEMPLATE_FILES: |
      WPECSStack.yml
    CONFIG_FILES: |
      config-params.json
phases:
  install:
    runtime-versions:
      docker: 18
      nodejs: 10      
    commands:
      npm install jsonlint -g
  pre_build:
    commands:
      - echo "Validating CFN templates"
      - |
        for cfn_template in $TEMPLATE_FILES; do
          echo "Validating CloudFormation template file $cfn_template"
          aws cloudformation validate-template --template-body file://$cfn_template
        done
      - |
        for cfn_template in $CHILD_TEMPLATES; do
          echo "Validating CloudFormation template file $cfn_template"
          aws cloudformation validate-template --template-body file://$cfn_template
        done
      - |
        for conf in $CONFIG_FILES; do
          echo "Validating CFN parameters config file $conf"
          jsonlint -q $conf
        done
  build:
    commands:
      - echo "Copying child stack templates to S3"
      - |
        for child_template in $CHILD_TEMPLATES; do
          if [ "X$TEMPLATE_PREFIX" = "X" ]; then
            aws s3 cp "$child_template" "s3://$TEMPLATE_BUCKET/$child_template"
          else
            aws s3 cp "$child_template" "s3://$TEMPLATE_BUCKET/$TEMPLATE_PREFIX/$child_template"
          fi
        done
      - echo "Updating template configuration files to use the appropriate values"
      - |
        for conf in $CONFIG_FILES; do
          if [ "X$TEMPLATE_PREFIX" = "X" ]; then
            echo "Replacing \"TEMPLATE_PATH_PLACEHOLDER\" for \"$TEMPLATE_BUCKET\" in $conf"
            sed -i -e "s/TEMPLATE_PATH_PLACEHOLDER/$TEMPLATE_BUCKET/" $conf
          else
            echo "Replacing \"TEMPLATE_PATH_PLACEHOLDER\" for \"$TEMPLATE_BUCKET/$TEMPLATE_PREFIX\" in $conf"
            sed -i -e "s/TEMPLATE_PATH_PLACEHOLDER/$TEMPLATE_BUCKET\/$TEMPLATE_PREFIX/" $conf
          fi
        done
      - echo "Updating parameter values in WPECSStack-params.json"
      - sed -i -e  "s|S3_BUCKET_PATH|$TEMPLATE_BUCKET/$TEMPLATE_PREFIX|" WPECSStack-params.json
      #- sed -i -e  "s|___ENVIRONMENT_PREFIX|$TEMPLATE_PREFIX|" WPECSStack-params.json
      - sed -i -e  "s|ENVIRONMENT_PLACEHOLDER|$TEMPLATE_PREFIX|" WPECSStack-params.json
      - cat WPECSStack-params.json
      - checking stack exits
      #- aws cloudformation stack-exists --stack-name WPECSStack
      - echo "Start Creating stacks"
      - aws cloudformation validate-template --template-body file://WPECSStack.yml  
      - aws cloudformation create-stack --stack-name WPECSStack --template-body file://WPECSStack.yml --parameters file://config-params.json --capabilities CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND 
      - aws cloudformation describe-stack-events --stack-name WPECSStack --no-paginate
      #- aws cloudformation wait stack-create-complete --stack-name WPECSStack --no-paginate

artifacts:
  files:
    - master-stack.yml
    - config-*.json