Description: Creates VPC and required components of VPC

Resources:
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: !Ref TagPrefix
  MyIGW:
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags:
      - Key: Name
        Value: !Sub ${TagPrefix}-IGW
  MyIGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    DependsOn: 
      - MyVPC
      - MyIGW
    Properties:
      InternetGatewayId: !Ref MyIGW
      VpcId: !Ref MyVPC 
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    DependsOn: MyVPC
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: !Sub ${TagPrefix}-PublicRouteTable
  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref PublicRouteTable
      GatewayId: !Ref MyIGW      
  PublicSubnet1:
    DependsOn: MyVPC
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: 'ap-southeast-2b'
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      VpcId: !Ref MyVPC
      Tags:
      - Key: Name
        Value: !Sub ${TagPrefix}-PublicSubnet1 
  PublicSubnet2:
    DependsOn: MyVPC
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: 'ap-southeast-2a'
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: false
      VpcId: !Ref MyVPC
      Tags:
      - Key: Name
        Value: !Sub ${TagPrefix}-PublicSubnet2
  PrivateSubnet1:
    DependsOn: MyVPC
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: 'ap-southeast-2a'
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      VpcId: !Ref MyVPC
      Tags:
      - Key: Name
        Value: !Sub ${TagPrefix}-PrivateSubnet1
  PrivateSubnet2:
    DependsOn: MyVPC
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: 'ap-southeast-2b'
      CidrBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      VpcId: !Ref MyVPC
      Tags:
      - Key: Name
        Value: !Sub ${TagPrefix}-PrivateSubnet2
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: 
      - PublicRouteTable
      - PublicSubnet1
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: 
      - PublicRouteTable
      - PublicSubnet2
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2
Outputs:
  VPCID:
    Description: VPCID
    Value: !Ref MyVPC
    Export:
      Name: !Sub '${AWS::StackName}-VPCID'
  